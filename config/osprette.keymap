#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define SYM_LMOD 1
#define NUM_RMOD 2
#define NAV 3
#define FN 4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <180>;
};

/ {
    behaviors {
        comma_exclam: comma_exclam {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_EXCLAM";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_qmark: dot_qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        fslash_bslash: fslash_bslash {
            compatible = "zmk,behavior-mod-morph";
            label = "FORWARDSLASH_BACKSLASH";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_j {
            timeout-ms = <80>;
            key-positions = <0 2>;
            bindings = <&kp J>;
            layers = <0>;
        };

        combo_x {
            timeout-ms = <80>;
            key-positions = <21 23>;
            bindings = <&kp X>;
            layers = <0>;
        };

        combo_esc {
            timeout-ms = <80>;
            key-positions = <21 22>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        combo_tab {
            timeout-ms = <60>;
            key-positions = <22 23>;
            bindings = <&kp TAB>;
            layers = <0>;
        };

        combo_grave {
            timeout-ms = <80>;
            key-positions = <26 27>;
            bindings = <&kp GRAVE>;
            layers = <0>;
        };

        combo_percent {
            timeout-ms = <80>;
            key-positions = <27 28>;
            bindings = <&kp PRCNT>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN_layer {
            bindings = <
                      &kp P &kp L &kp C        &kp F          &kp K      &kp U         &kp O      &kp Y
          &kp V &kp R &kp N &kp T &kp S        &kp D          &kp APOS   &kp A         &kp E      &kp I    &kp H          &kp Q
                &kp Z &kp B &kp M &kp G        &kp W          &kp MINUS  &comma_exclam &dot_qmark &kp SEMI &fslash_bslash
                                  &sl SYM_LMOD &lt NAV SPC    &skq RSHFT &sl NUM_RMOD
            >;
        };

        SYM_LMOD_layer {
            bindings = <
                              &kp LC(W)       &kp LC(Q)   &kp LC(T) &none        &kp LBRC  &kp DEL   &kp RBRC &kp HASH
   &kp LA(LEFT) &sk LSHFT     &sk LALT        &sk LCTRL   &sk LGUI  &kp PSCRN    &kp LPAR  &kp BSPC  &kp RPAR &kp LT   &kp AT    &kp PIPE
                &kp LA(RIGHT) &kp LS(LC(TAB)) &kp LC(TAB) &kp LC(N) &kp CAPS     &kp LBKT  &kp ENTER &kp RBKT &kp GT   &kp TILDE
                                                          &none     &none        &trans    &sl FN
            >;
        };

        NUM_RMOD_layer {
            bindings = <
                         &kp N7 &kp N8 &kp N9  &kp STAR     &none  &sk LS(RGUI) &kp LC(D) &kp LC(C)
      &kp CARET &kp AMPS &kp N1 &kp N2 &kp N3  &kp EQUAL    &none  &sk RGUI     &sk RCTRL &sk RALT  &sk RSHFT &kp LC(V)
                &kp DLLR &kp N4 &kp N5 &kp N6  &kp PLUS     &none  &none        &none     &none     &none
                                       &kp DOT &kp N0       &trans &none
            >;
        };

        NAV_layer {
            bindings = <
                         &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &kp C_MUTE    &sk LA(LCTRL) &kp LG(D)     &kp LS(LG(D)) &kp LG(Q)
     &kp C_PREV &kp LEFT &kp DOWN     &kp UP       &kp RIGHT  &kp C_PP      &sk LA(LGUI)  &kp LG(LEFT)  &kp LG(DOWN)  &kp LG(UP) &kp LG(RIGHT) &sk LCTRL
                &kp HOME &kp PG_DN    &kp PG_UP    &kp END    &kp C_STOP    &none         &kp LG(ENTER) &kp LG(O)     &kp LG(N)  &sk LALT
                                                   &none      &none         &trans        &none
            >;
        };

        FN_layer {
            bindings = <
                      &kp F7 &kp F8 &kp F9 &kp F10    &none  &kp C_BRI_DN &kp C_BRI_UP &none
          &none &none &kp F1 &kp F2 &kp F3 &kp F11    &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none
                &none &kp F4 &kp F5 &kp F6 &kp F12    &none  &bt BT_CLR   &none        &none        &none
                                    &none  &none      &trans &none
            >;
        };
    };
};
