/*
* Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define Default_layer 0
#define Layer_1 1

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <225>;
            flavor = "hold-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        qtl: quick_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <225>;
            flavor = "hold-preferred";
            bindings =
                <&mo>,
                <&kp>;
        };
    };

    macros {
        pl: pl {
            compatible = "zmk,behavior-macro";
            label = "PL";
            #binding-cells = <0>;
            bindings = <&kp P &kp L &kp ENTER>;
        };
        xl: xl {
            compatible = "zmk,behavior-macro";
            label = "XL";
            #binding-cells = <0>;
            bindings = <&kp X &kp L &kp ENTER>;
        };
        pu: pu {
            compatible = "zmk,behavior-macro";
            label = "PU";
            #binding-cells = <0>;
            bindings = <&kp P &kp U &kp ENTER>;
        };
        di: di {
            compatible = "zmk,behavior-macro";
            label = "DI";
            #binding-cells = <0>;
            bindings = <&kp D &kp I &kp ENTER>;
        };
        tmn_s: tmn_s {
            compatible = "zmk,behavior-macro";
            label = "TMN_S";
            #binding-cells = <0>;
            bindings = <&kp G &kp X &kp Y &kp C &kp ENTER>;
        };
        tmn_FH: tmn_FH {
            compatible = "zmk,behavior-macro";
            label = "TMN_FH";
            #binding-cells = <0>;
            bindings = <&kp B &kp X &kp H &kp S &kp ENTER>;
        };
        tmn_FHc: tmn_FHc {
            compatible = "zmk,behavior-macro";
            label = "TMN_FHC";
            #binding-cells = <0>;
            bindings = <&kp L &kp X &kp H &kp S &kp ENTER>;
        };
        tmn_sysgen: tmn_sysgen {
            compatible = "zmk,behavior-macro";
            label = "TMN_SYSGEN";
            #binding-cells = <0>;
            bindings = <&kp X &kp T &kp F &kp J &kp ENTER>;
        };
        tmn_valve: tmn_valve {
            compatible = "zmk,behavior-macro";
            label = "TMN_VALVE";
            #binding-cells = <0>;
            bindings = <&kp F &kp M &kp F &kp J &kp ENTER>;
        };
        tmn_riserpipe: tmn_riserpipe {
            compatible = "zmk,behavior-macro";
            label = "TMN_RISERPIPE";
            #binding-cells = <0>;
            bindings = <&kp L &kp G &kp B &kp Z &kp ENTER>;
        };
        tmn_wsgen: tmn_wsgen {
            compatible = "zmk,behavior-macro";
            label = "TMN_WSGEN";
            #binding-cells = <0>;
            bindings = <&kp G &kp S &kp F &kp J &kp ENTER>;
        };
        tmn_wdgen: tmn_wdgen {
            compatible = "zmk,behavior-macro";
            label = "TMN_WDGEN";
            #binding-cells = <0>;
            bindings = <&kp P &kp S &kp F &kp J &kp ENTER>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
            layers = <0 4>;
            timeout-ms = <40>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 29>;
            layers = <0>;
        };

        ctrl_plus_alt {
            bindings = <&kp LA(LCTRL)>;
            key-positions = <38 37 30 31>;
            layers = <0 1 2>;
        };

        combo_f1 {
            bindings = <&kp F1>;
            key-positions = <0 10>;
            layers = <0 2 1>;
        };

        combo_f2 {
            bindings = <&kp F2>;
            key-positions = <1 11>;
            layers = <0 1 2>;
        };

        combo_f3 {
            bindings = <&kp F3>;
            key-positions = <2 12>;
            layers = <2 1 0>;
        };

        combo_f4 {
            bindings = <&kp F4>;
            key-positions = <3 13>;
            layers = <2 1 0>;
        };

        combo_f5 {
            bindings = <&kp F5>;
            key-positions = <4 14>;
            layers = <2 1 0>;
        };

        combo_f8 {
            bindings = <&kp F8>;
            key-positions = <1 3>;
            layers = <4>;
            timeout-ms = <40>;
        };

        cb_lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        cb_rlar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        cb_lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
        };

        cb_rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <15 16>;
        };

        cb_lbrc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 24>;
        };

        cb_rbrc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <25 26>;
        };

        cb_altf4 {
            bindings = <&kp LA(F4)>;
            key-positions = <0 24>;
        };

        cb_quotedoubl {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <12 13>;
        };

        cb_quotesingle {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <11 12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_layer {
            bindings = <
&kp Q  &kp W  &kp F  &kp P          &kp G                   &kp J                  &kp L             &kp U      &kp Y                  &kp SEMI
&kp A  &kp R  &kp S  &kp T          &kp D                   &kp H                  &kp N             &kp E      &kp I                  &kp O
&kp Z  &kp X  &kp C  &kp V          &hm LEFT_SHIFT B        &kp K                  &kp M             &kp COMMA  &hm RIGHT_CONTROL DOT  &kp FSLH
                     &qtl 1 ESCAPE  &hm LEFT_CONTROL SPACE  &qt RIGHT_SHIFT ENTER  &qtl 2 BACKSPACE
            >;
        };

        Layer_1 {
            bindings = <
&kp LA(Q)   &kp LA(W)       &kp UP_ARROW    &kp LA(F)        &kp F12    &kp KP_N7        &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp KP_PLUS
&kp LA(A)   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SLASH  &kp KP_ASTERISK
&kp K_CALC  &none           &none           &kp GRAVE        &kp TILDE  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp CARET     &kp BACKSPACE
                                            &trans           &trans     &kp KP_NUMBER_0  &lt 3 KP_DOT
            >;
        };

        layer_2 {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(N8)    &kp MINUS     &kp EQUAL
&kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5      &kp NUMBER_6      &kp NUMBER_7      &kp NUMBER_8  &kp NUMBER_9  &kp N0
&bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &trans            &bt BT_CLR        &trans            &none             &none         &kp DELETE    &kp BACKSPACE
                                                      &mo 3             &kp SPACE         &kp ENTER         &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &bt BT_CLR  &none  &none  &none  &none  &none
&none         &none         &none         &none  &none       &none  &none  &none  &none  &none
&kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &none  &none       &to 4  &none  &none  &none  &none
                                          &none  &none       &none  &none
            >;
        };

        layer_4 {
            bindings = <
&kp Q  &kp W  &kp E  &kp P         &kp L                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS   &kp KP_PLUS
&kp A  &kp R  &kp S  &kp T         &kp O                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SLASH   &kp KP_ASTERISK
&kp Z  &kp X  &kp C  &kp V         &kp M                   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp BACKSPACE  &kp ENTER
                     &lt 5 ESCAPE  &hm LEFT_CONTROL SPACE  &kp KP_NUMBER_0  &kp KP_DOT
            >;
        };

        layer_5 {
            bindings = <
&tmn_riserpipe    &tmn_wsgen  &tmn_wdgen  &pu          &pl      &kp TILDE  &trans  &trans         &trans            &trans
&kp LA(A)         &trans      &tmn_s      &tmn_FHc     &di      &trans     &trans  &trans         &trans            &trans
&kp K_CALCULATOR  &xl         &tmn_valve  &tmn_sysgen  &tmn_FH  &to 0      &trans  &kp LESS_THAN  &kp GREATER_THAN  &trans
                                          &trans       &trans   &trans     &trans
            >;
        };
    };
};
