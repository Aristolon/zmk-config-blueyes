/*
* Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define Default_layer 0
#define Layer_1 1

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <225>;
            flavor = "hold-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        qtl: quick_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <225>;
            flavor = "hold-preferred";
            bindings =
                <&mo>,
                <&kp>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            layers = <0 1 2>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <3 2>;
            layers = <0 1 2>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <10 19>;
            layers = <0 1 2>;
        };

        blank {
            bindings = <&tog 3>;
            key-positions = <37 38 39 40 30 31 32 33>;
        };

        ctrl_plus_alt {
            bindings = <&kp LA(LCTRL)>;
            key-positions = <38 37 30 31>;
            layers = <0 1 2>;
        };

        combo_caplocks {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 12 18 17>;
            layers = <0 1 2>;
        };

        combo_f1 {
            bindings = <&kp F1>;
            key-positions = <0 10>;
            layers = <0 2 1>;
        };

        combo_f2 {
            bindings = <&kp F2>;
            key-positions = <1 11>;
            layers = <0 1 2>;
        };

        combo_f3 {
            bindings = <&kp F3>;
            key-positions = <2 12>;
            layers = <2 1 0>;
        };

        combo_f4 {
            bindings = <&kp F4>;
            key-positions = <3 13>;
            layers = <2 1 0>;
        };

        combo_f5 {
            bindings = <&kp F5>;
            key-positions = <4 14>;
            layers = <2 1 0>;
        };

        combo_f6 {
            bindings = <&kp F6>;
            key-positions = <5 15>;
            layers = <2 1 0>;
        };

        combo_f7 {
            bindings = <&kp F7>;
            key-positions = <6 16>;
            layers = <2 1 0>;
        };

        combo_f8 {
            bindings = <&kp F8>;
            key-positions = <7 17>;
            layers = <2 1 0>;
        };

        combo_f9 {
            bindings = <&kp F9>;
            key-positions = <8 18>;
            layers = <2 1 0>;
        };

        combo_f10 {
            bindings = <&kp F10>;
            key-positions = <9 19>;
            layers = <2 1 0>;
        };

        combo_f11 {
            bindings = <&kp F11>;
            key-positions = <10 20>;
            layers = <2 1 0>;
        };

        combo_f12 {
            bindings = <&kp F12>;
            key-positions = <11 21>;
            layers = <2 1 0>;
        };

        new_combo {
            bindings = <&kp LGUI>;
            key-positions = <24 31>;
            layers = <2 1 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_layer {
            bindings = <
&kp Q  &kp W  &kp F          &kp P                   &kp G                  &kp J             &kp L      &kp U                  &kp Y  &kp SEMI
&kp A  &kp R  &kp S          &kp T                   &kp D                  &kp H             &kp N      &kp E                  &kp I     &kp O
&kp Z  &kp X  &kp C          &kp V        &hm LEFT_SHIFT B                  &kp K             &kp M  &kp COMMA  &hm RIGHT_CONTROL DOT  &kp FSLH
                     &qtl 1 ESCAPE  &hm LEFT_CONTROL SPACE  &qt RIGHT_SHIFT ENTER  &qtl 2 BACKSPACE
            >;
        };

        Layer_1 {
            bindings = <
        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9         &kp NUMBER_0
&hm LEFT_SHIFT MINUS     &kp EQUAL      &kp LBKT      &kp RBKT      &kp BSLH      &kp LEFT      &kp DOWN        &kp UP     &kp RIGHT  &hm RIGHT_SHIFT SQT
            &kp HOME       &kp END     &kp PG_UP     &kp PG_DN     &kp GRAVE        &trans        &trans        &trans        &trans               &trans
                                                        &trans        &trans        &trans        &trans
            >;
        };

        layer_2 {
            bindings = <
        &kp F1        &kp F2        &kp F3  &kp F4      &kp F5  &kp F6      &kp F7        &kp F8        &kp F9     &kp F10
&hm LSHIFT F11       &kp F12        &trans  &trans      &trans  &trans      &trans        &trans        &trans  &kp LSHIFT
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP      &trans
                                            &trans      &trans  &trans      &trans
            >;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none
                     &none  &none  &none  &none
            >;
        };
    };
};
